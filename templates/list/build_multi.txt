// build{NAME} constructs a []client.{CLIENT_TYPE} from the given Terraform state.
func ({OPERATOR_INSTANCE_NAME} *{OPERATOR_NAME}) build{NAME}(state types.List) *[]client.{CLIENT_TYPE} {
	// Convert Terraform list into model blocks using generic helper
  blocks, ok := BuildList[models.{MODEL}]({OPERATOR_INSTANCE_NAME}.Ctx, {OPERATOR_INSTANCE_NAME}.Diags, state)

  // Return nil if conversion failed or list was empty
  if !ok {
    return nil
  }

  // Prepare the output slice
  output := []client.{CLIENT_TYPE}{}

  // Iterate over each block and construct an output item
  for _, block := range blocks {
    // Construct the item
    item := client.{CLIENT_TYPE}{}

    // Add the item to the output slice
    output = append(output, item)
  }

	// Return a pointer to the output
  return &output
}